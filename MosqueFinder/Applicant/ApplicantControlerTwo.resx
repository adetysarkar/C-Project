<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>